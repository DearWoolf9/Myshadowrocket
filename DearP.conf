[General]
# > 基础设置
bypass-system = true
#跳过代理
skip-proxy = 127.0.0.1, 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12,100.64.0.0/10,  17.0.0.0/8, *.local, *.crashlytics.com, seed-sequoia.siri.apple.com, localhost, sequoia.apple.com, www.abchina.com.cn, iosapps.itunes.apple.com, captive.apple.com

#排除路由
tun-excluded-routes = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24, 192.168.0.0/16, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32, 239.255.255.250/32

#DNS服务器
dns-server = 223.5.5.5, 119.29.29.29
fallback-dns-server = system

ipv6 = true
prefer-ipv6 = false

# DNS
dns-fallback-system = false
dns-direct-system = false

# ICMP自动回复
icmp-auto-reply = true

# 始终拒绝URL重写
always-reject-url-rewrite = false

# 私人IP回答
private-ip-answer = true

# DNS直接后备代理
dns-direct-fallback-proxy = true

# UDP策略不支持行为
udp-policy-not-supported-behaviour = REJECT


[Proxy Group]
# > 策略组
# 代理分组类型：
# select:手动切换节点。
# url-test:自动切换延迟最低节点。
# fallback:节点挂掉时自动切换其他可用节点。
# load-balance:不同规则的请求使用分组里的不同节点进行连接。
# random:随机使用分组里的不同节点进行连接。

# policy-regex-filter表示正则式或关键词筛选，常用写法：
# 1、保留节点名称含有关键词A和B的节点:
# (?=.*(A))^(?=.*(B))^.*$
# 2、保留节点名称含有关键词A或B的节点:
# A|B
# 3、排除节点名称含有关键词A或B的节点:
# ^((?!(A|B)).)*$
# 4、保留节点名称含有关键词A并排除含有关键词B的节点:
# (?=.*(A))^((?!(B)).)*$

# 代理分组其他设置参数：
# interval:指定间隔多长时间后需要重新发起测试。
# timeout:如果测试在超时前未完成，放弃测试。
# tolerance:只有当新优胜者的分数高于旧优胜者的分数加上公差时，才会进行线路更换。
# url:指定要测试的URL。

# 不含正则筛选的代理分组，示例：
# 名称 = 类型(如select,url-test,fallback,load-balance,random),策略(如direct,proxy,订阅名称,代理分组,节点),interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址

# 含正则筛选的代理分组，示例：
# 名称 = 类型(如select,url-test,fallback,load-balance,random),policy-regex-filter=正则式或关键词筛选,interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址

# 开启订阅筛选的代理分组，示例：
# 名称 = 类型(如select,url-test,fallback,load-balance,random),订阅名称(多个订阅时,用逗号分隔),use=true,policy-regex-filter=正则式或关键词筛选(省略该参数时,表示匹配对应订阅的全部节点),interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址



# >> 自动测速
♻️ 自动选择 = url-test, url=http://www.gstatic.com/generate_204, interval=600, tolerance=50, timeout=3, select=0, policy-regex-filter = https://app.mitce.net/?sid=298350&token=srvycpuo

# >> 手动选择 
🚀 手动切换 = select, policy-regex-filter = https://app.mitce.net/?sid=298350&token=srvycpuo
🚀 节点选择 = select, ♻️ 自动选择, 🚀 手动切换, 🇭🇰 香港节点, 🇼🇸 台湾节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来节点, 🇺🇳 小众节点, DIRECT 

# >> 分流策略 
📲 电报消息 = select, ♻️ 自动选择, 🚀 手动切换, 🚀 节点选择, 🇭🇰 香港节点, 🇼🇸 台湾节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来节点, 🇺🇳 小众节点 
💬 OpenAI = select, ♻️ 自动选择, 🚀 手动切换, 🚀 节点选择, 🇭🇰 香港节点, 🇼🇸 台湾节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来节点, 🇺🇳 小众节点 
# >> 流媒体策略 
📹 油管视频 = select, ♻️ 自动选择, 🚀 手动切换, 🚀 节点选择, 🇭🇰 香港节点, 🇼🇸 台湾节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来节点, 🇺🇳 小众节点 
🎥 奈飞视频 = select, ♻️ 自动选择, 🚀 手动切换, 🚀 节点选择, 🇭🇰 香港节点, 🇼🇸 台湾节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来节点, 🇺🇳 小众节点 
📺 巴哈姆特 = select, 🇼🇸 台湾节点, 🚀 节点选择, 🚀 手动切换 
📺 哔哩哔哩 = select, DIRECT
🎶 网易音乐 = select, DIRECT
🌍 国外媒体 = select, ♻️ 自动选择, 🚀 手动切换, 🚀 节点选择, 🇭🇰 香港节点, 🇼🇸 台湾节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来节点, 🇺🇳 小众节点 
🌏 国内媒体 = select, DIRECT
# >> 服务策略 
📢 谷歌FCM = select, DIRECT, ♻️ 自动选择, 🚀 手动切换, 🇭🇰 香港节点, 🇼🇸 台湾节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来节点, 🇺🇳 小众节点 
Ⓜ️ 微软云盘 = select, DIRECT, 
Ⓜ️ 微软服务 = select, DIRECT, 
🍎 苹果服务 = select, DIRECT, 
🎮 游戏平台 = select, DIRECT, 
# >> 基础策略 
🎯 全球直连 = select, DIRECT, 🚀 节点选择, ♻️ 自动选择 
🛑 广告拦截 = select, REJECT
🍃 应用净化 = select, REJECT
🐟 漏网之鱼 = select, ♻️ 自动选择, 🚀 手动切换, 🇭🇰 香港节点, 🇼🇸 台湾节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来节点, 🇺🇳 小众节点, DIRECT 

# > 地域分组
🇭🇰 香港节点 = url-test, tolerance = 50, policy-regex-filter = (🇭🇰)|(港)|(Hong)|(HK) 
🇼🇸 台湾节点 = url-test, tolerance = 50, policy-regex-filter = (🇼🇸)|(台)|(Tai)|(TW) 
🇯🇵 日本节点 = url-test, tolerance = 50, policy-regex-filter = (🇯🇵)|(日)|(Japan)|(JP) 
🇸🇬 狮城节点 = url-test, tolerance = 50, policy-regex-filter = (🇸🇬)|(新)|(Singapore)|(SG) 
🇺🇲 美国节点 = url-test, tolerance = 50, policy-regex-filter = (🇺🇸)|(美)|(States)|(US) 
🇬🇧 英国节点 = url-test, tolerance = 50, policy-regex-filter = (🇬🇧)|(英)|(Kingdom)|(UK) 
🇲🇾 马来节点 = url-test, tolerance = 50, policy-regex-filter = (🇲🇾)|(马)|(Malaysia)|(MA) 
🇺🇳 小众节点 = url-test, tolerance = 50, policy-regex-filter = (喀麦隆)|(冰岛)|(土耳其)|(阿根廷) 
# >> 多地域组合
🗺️ Non-HK = url-test, tolerance = 50, 🇼🇸 台湾节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇲🇾 马来节点, 🇺🇳 小众节点 
🌏 Asia = url-test, tolerance = 50, 🇭🇰 香港节点, 🇼🇸 台湾节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇲🇾 马来节点 
🌎 Western = url-test, tolerance = 50, 🇺🇲 美国节点, 🇬🇧 英国节点, 🇺🇳 小众节点

[Rule]
# >> 广告规则
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanAD.list, 🛑 广告拦截, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanProgramAD.list, 🍃 应用净化, update-interval = 86400

# >> 基础规则集
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/LocalAreaNetwork.list, 🎯 全球直连, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaDomain.list, 🎯 全球直连, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaCompanyIp.list, 🎯 全球直连, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaIp.list, 🎯 全球直连, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/UnBan.list, 🎯 全球直连, update-interval = 86400

# >> 地域规则
OR, ((DOMAIN-SUFFIX, jetbrains.com), (DOMAIN-SUFFIX, ugreengroup.com), (DOMAIN-SUFFIX, msftconnecttest.com), (DOMAIN-SUFFIX, appstorrent.ru), (DOMAIN-SUFFIX, zerotier.com), (DOMAIN-SUFFIX, imgse.com)), 🎯 全球直连

OR, ((DOMAIN-KEYWORD,grok,PROXY), (DOMAIN-KEYWORD,twitter,PROXY), (DOMAIN-SUFFIX,x.com,PROXY), (DOMAIN-SUFFIX,twitter.com,PROXY), (DOMAIN-SUFFIX,x.ai,PROXY), (OMAIN-SUFFIX,grok.com,PROXY), (DOMAIN-KEYWORD,xai,PROXY), (DOMAIN-KEYWORD, google), (DOMAIN-SUFFIX, meta.ai), (DOMAIN-SUFFIX, instagram.com), (DOMAIN-SUFFIX, claude.ai), (DOMAIN-SUFFIX, anthropic.com), (DOMAIN-SUFFIX, vfsglobal.com), (DOMAIN-SUFFIX, ca), (DOMAIN-SUFFIX, docker.com)), 🇺🇲 美国节点


OR, ((DOMAIN-SUFFIX, itoolab.com), (DOMAIN-SUFFIX, itoolab.net), (DOMAIN-SUFFIX, ip-api.com), (DOMAIN-SUFFIX,ero-labs.com,PROXY), (DOMAIN-SUFFIX,api.ero-labs.com,PROXY), (DOMAIN-KEYWORD,ero-labs,PROXY), (DOMAIN-KEYWORD,erolabs,PROXY), (DOMAIN-KEYWORD,rise-of-eros,PROXY), (DOMAIN-KEYWORD,Rise of Eros,PROXY)), ♻️ 自动选择



RULE-SET, https://whatshub.top/rule/Binance.list, 🇸🇬 狮城节点, update-interval = 86400

DOMAIN-SUFFIX, copilot.microsoft.com, 🗺️ Non-HK

# >> 应用规则
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/GoogleFCM.list, 📢 谷歌FCM, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/GoogleCN.list, 🎯 全球直连, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/SteamCN.list, 🎯 全球直连, update-interval = 86400
# >> 微软/苹果
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/OneDrive.list, Ⓜ️ 微软云盘, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Microsoft.list, Ⓜ️ 微软服务, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Apple.list, 🍎 苹果服务, update-interval = 86400
# >> 社交媒体
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Telegram.list, 📲 电报消息, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/OpenAi.list, 💬 OpenAI, update-interval = 86400
# >> 流媒体音视频
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/NetEaseMusic.list, 🎶 网易音乐, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/YouTube.list, 📹 油管视频, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Netflix.list, 🎥 奈飞视频, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Bahamut.list, 📺 巴哈姆特, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/BilibiliHMT.list, 📺 哔哩哔哩, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Bilibili.list, 📺 哔哩哔哩, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaMedia.list, 🌏 国内媒体, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyMedia.list, 🌍 国外媒体, update-interval = 86400
# >> 游戏平台
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Epic.list, 🎮 游戏平台, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Origin.list, 🎮 游戏平台, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Sony.list, 🎮 游戏平台, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Steam.list, 🎮 游戏平台, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Nintendo.list, 🎮 游戏平台, update-interval = 86400
# >> 代理规则
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list, 🚀 节点选择, update-interval = 86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Download.list, 🎯 全球直连, update-interval = 86400
# > GeoIP China
GEOIP,CN, 🎯 全球直连,no-resolve
# > 兜底规则
FINAL, 🐟 漏网之鱼

[Host]
# 域名指定本地值：
# example.com = 1.2.3.4

# 域名指定 DNS 服务器：
# example.com = server:1.2.3.4

# wifi名称指定 DNS 服务器，如需指定多个 DNS，可用逗号分隔：
# ssid:wifi名称 = server:1.2.3.4

localhost = 127.0.0.1
*.apple.com = server:system
*.icloud.com = server:system

[URL Rewrite]
^https?://(www.)?g.cn https://www.google.com 302
^https?://(www.)?google.cn https://www.google.com 302


# 以下为[Proxy Group]注释：
# 代理分组类型：
# select:手动切换节点。
# url-test:自动切换延迟最低节点。
# fallback:节点挂掉时自动切换其他可用节点。
# load-balance:不同规则的请求使用分组里的不同节点进行连接。
# random:随机使用分组里的不同节点进行连接。

# policy-regex-filter表示正则式或关键词筛选，常用写法：
# 1、保留节点名称含有关键词A和B的节点:
# (?=.*(A))^(?=.*(B))^.*$
# 2、保留节点名称含有关键词A或B的节点:
# A|B
# 3、排除节点名称含有关键词A或B的节点:
# ^((?!(A|B)).)*$
# 4、保留节点名称含有关键词A并排除含有关键词B的节点:
# (?=.*(A))^((?!(B)).)*$

# 代理分组其他设置参数：
# interval:指定间隔多长时间后需要重新发起测试。
# timeout:如果测试在超时前未完成，放弃测试。
# tolerance:只有当新优胜者的分数高于旧优胜者的分数加上公差时，才会进行线路更换。
# url:指定要测试的URL。

# 不含正则筛选的代理分组，示例：
# 名称 = 类型(如select,url-test,fallback,load-balance,random),策略(如direct,proxy,订阅名称,代理分组,节点),interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址

# 含正则筛选的代理分组，示例：
# 名称 = 类型(如select,url-test,fallback,load-balance,random),policy-regex-filter=正则式或关键词筛选,interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址

# 开启订阅筛选的代理分组，示例：
# 名称 = 类型(如select,url-test,fallback,load-balance,random),订阅名称(多个订阅时,用逗号分隔),use=true,policy-regex-filter=正则式或关键词筛选(省略该参数时,表示匹配对应订阅的全部节点),interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址


# 以下为[Rule]注释：
# 规则类型：
# DOMAIN-SUFFIX：匹配请求域名的后缀。如“DOMAIN-SUFFIX,example.com,DIRECT”可以匹配到“a.example.com、a.b.example.com”。
# DOMAIN-KEYWORD：匹配请求域名的关键词。如“DOMAIN-KEYWORD,exa,DIRECT”可以匹配到“a.example.com、a.b.example.com”。
# DOMAIN：匹配请求的完整域名。如“DOMAIN,www.example.com,DIRECT”只能匹配到“www.example.com”。
# （当为DOMAIN、DOMAIN-SUFFIX和DOMAIN-KEYWORD类型分别设置相同的值时，只有其中一种类型会生效。）
# USER-AGENT：匹配用户代理字符串，支持使用通配符“*”。如“USER-AGENT,MicroMessenger*,DIRECT”可以匹配到“MicroMessenger Client”。
# URL-REGEX：匹配URL正则式。如“URL-REGEX,^https?://.+/item.+,REJECT”可以匹配到“https://www.example.com/item/abc/123”。
# IP-CIDR：匹配IPv4或IPv6地址。如“IP-CIDR,192.168.1.0/24,DIRECT”可以匹配到IP段“192.168.1.1～192.168.1.254”。当域名请求遇到IP类规则时，Shadowrocket会向本地 DNS 服务器发送查询请求，以判断主机IP是否匹配规则。若IP类规则加“no-resolve”(如：IP-CIDR,172.16.0.0/12,DIRECT,no-resolve)，则域名请求将会跳过此规则，不会触发本地 DNS 查询。
# IP-ASN：匹配IP地址隶属的ASN编号。如"IP-ASN,56040,DIRECT"可以匹配到属于China Mobile Communications Corporation网络的IP地址。
# RULE-SET：匹配规则集内容。规则集的内容需包含规则类型，如"https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Apple/Apple.list"。（兼容仅包含IP地址且不带规则类型的规则集）
# DOMAIN-SET：匹配域名集内容。域名集的内容不包含规则类型，如"https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Apple/Apple_Domain.list"。
# SCRIPT：匹配脚本名称。（创建rule类型脚本，再添加script类型的规则。）
# DST-PORT：匹配目标主机名的端口号。如“DST-PORT,443,DIRECT”可以匹配到443目标端口。
# GEOIP：匹配IP数据库。如“GEOIP,CN,DIRECT”可以匹配到归属地为CN的IP地址。
# FINAL：兜底策略。如“FINAL,PROXY”表示当其他所有规则都匹配不到时才使用FINAL规则的策略。
# AND：逻辑规则，与规则。如“AND,((DOMAIN,www.example.com),(DST-PORT,123)),DIRECT”可以匹配到“www.example.com:123”。
# NOT：逻辑规则，非规则。如“NOT,((DST-PORT,123)),DIRECT”可以匹配到除了“123”端口的其他所有请求。
# OR：逻辑规则，或规则。如“OR,((DST-PORT,123),(DST-PORT,456)),DIRECT”可以匹配到“123”或“456”端口的所有请求。

# 规则策略：
# PROXY：代理。通过代理服务器转发流量。
# DIRECT：直连。连接不经过任何代理服务器。
# REJECT：拒绝。返回HTTP状态码404，没有内容。
# REJECT-DICT：拒绝。返回HTTP状态码200，内容为空的JSON对象。
# REJECT-ARRAY：拒绝。返回HTTP状态码200，内容为空的JSON数组。
# REJECT-200：拒绝。返回HTTP状态码200，没有内容。
# REJECT-IMG：拒绝。返回HTTP状态码200，内容为1像素GIF。
# REJECT-TINYGIF：拒绝。返回HTTP状态码200，内容为1像素GIF。
# REJECT-DROP：拒绝。丢弃IP包。
# REJECT-NO-DROP：拒绝。返回ICMP端口不可达。
# 除此之外，规则策略还可以选择「代理分组」、「订阅名称」、「分组」、「节点」。

# 规则匹配的优先级：
# 1.模块规则优先于配置文件规则。
# 2.规则从上到下依次匹配。
# 3.域名规则优先于IP规则。

# 关于屏蔽443端口的UDP流量的解释内容：HTTP3/QUIC协议开始流行，但是国内ISP和国际出口的UDP优先级都很低，表现很差，屏蔽掉以强制回退HTTP2/HTTP1.1。（如需启用该逻辑规则，请删除AND前面的注释符号#）
# AND,((PROTOCOL,UDP),(DST-PORT,443)),REJECT-NO-DROP


